<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- ******** Spring Security SiteMinder Configuration********** -->

	<security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled"/>

	<!-- <security:http pattern="/services/**" access=="isAuthenticated()" />
	<security:http pattern="/ws/**" security="none" /> -->
	<security:http pattern="/services/marketwf/**" security="none" />
	<security:http pattern="/resources/**" security="none" />
	<security:http pattern="/unauthorized.jsp" security="none" />

	<security:http auto-config="false" use-expressions="true" entry-point-ref="authenticationEntryPoint">
		<security:custom-filter position="PRE_AUTH_FILTER" ref="authenticationFilter" />
		<security:intercept-url pattern="/**" access="isAuthenticated()" />
		<security:access-denied-handler ref="accessDeniedHandler" />
		<security:session-management invalid-session-url="/unauthorized.jsp" />
		<security:logout logout-url="/unauthorized.jsp" invalidate-session="true" />
	</security:http>

	<bean id="accessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
		<property name="errorPage" value="/unauthorized.jsp" />
	</bean>


	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="preauthAuthProvider" />
	</security:authentication-manager>

	<bean id="preauthAuthProvider" class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
		<property name="preAuthenticatedUserDetailsService">
			<bean id="userDetailsServiceWrapper" class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
				<property name="userDetailsService" ref="eemsUserDetailsProvider" />
			</bean>
		</property>
	</bean>

	<bean id="eemsUserDetailsProvider" class="com.citi.ipas.bootstrap.EEMSUserDetailProvider"></bean>

	<bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"></bean>
	
	<beans profile="default">
		<bean id="authenticationFilter"
			class="org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter">
			<property name="principalRequestHeader" value="SM_USER" />
			<property name="authenticationManager" ref="authenticationManager" />
			<property name="exceptionIfHeaderMissing" value="false" />
		</bean>
	</beans>
	<beans profile="local">
		<bean id="authenticationFilter" class="com.citi.ips.security.web.authentication.preauth.RequestParameterAuthenticationFilter">
			<property name="authenticationManager" ref="authenticationManager" />
			<property name="principalRequestParamName" value="soeId" />
		</bean>
	</beans>
	</beans>